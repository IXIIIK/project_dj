version: "3.9"

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 3s
      retries: 30
    restart: unless-stopped

  web:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env.prod
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - static_data:/app/static_root
      - media_data:/app/media
    command: ["/app/entrypoint.sh"]
    restart: unless-stopped

  nginx:
    image: nginx:1.27-alpine
    depends_on:
      - web
    ports:
      - "80:80"
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_data:/var/www/static:ro
      - media_data:/var/www/media:ro
    restart: unless-stopped

volumes:
  db_data:
  static_data:
  media_data:
